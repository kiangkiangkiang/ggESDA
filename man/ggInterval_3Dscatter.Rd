% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggInterval_3Dscatter.R
\name{ggInterval_3Dscatter}
\alias{ggInterval_3Dscatter}
\title{3D scatter plot for interval data}
\usage{
ggInterval_3Dscatter(data = NULL,mapping = aes(NULL),scale=FALSE)
}
\arguments{
\item{data}{A ggSDA object.It can also be either RSDA object or
classical data frame,which will be automatically convert to ggSDA
data.}

\item{mapping}{Set of aesthetic mappings created by aes() or aes_().
If specified and inherit.aes = TRUE (the default),
it is combined with the default mapping at the top level of
the plot. You must supply mapping if there is no plot mapping.
It is the same as the mapping of ggplot2.}

\item{scale}{A boolean variable,TRUE,standardlize data.FALSE,not standardlize.
If variance is too large(or small) or the difference between
two variables are too large,it will be distortion or unseeable,which may
happen in different units or others.So,a standardlize way is necessary.}
}
\value{
Return a ggplot2 object (It will still be 2-Dimension).
}
\description{
Visualize the three continuous variable distribution
by collecting all vertices in each interval to form a shape of
cube.Also show the difference between each group.
}
\examples{
p<-ggInterval_3Dscatter(iris,aes(iris$Sepal.Length,iris$Sepal.Width,iris$Petal.Length))
p
p+scale_fill_manual(values = c("red","yellow",
    "green","blue",
    "black"),
    labels=c("group1","group2",
            "group3","group4",
            "group5"),
    name="my fill")

#generate symbolic data
mySymData<-classic2sym(iris,Species)
mySymData<-mySymData$intervalData
p<-ggInterval_3Dscatter(mySymData,aes(Sepal.Length,
    Sepal.Width,
    Petal.Length,col="red",lty=2))
p
p+scale_fill_manual(values = c("yellow",
    "green",
    "black"),
    labels=rownames(mySymData))




}
