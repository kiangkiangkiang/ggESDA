% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggInterval_minmax.r
\name{ggInterval_minmax}
\alias{ggInterval_minmax}
\title{A min-max plot for interval data}
\usage{
ggInterval_minmax(data = NULL,mapping = aes(NULL),
          scaleXY = "local",plotAll=F)
}
\arguments{
\item{data}{A ggESDA object.It can also be either RSDA object or
classical data frame,which will be automatically convert to ggESDA
data.}

\item{mapping}{Set of aesthetic mappings created by aes() or aes_().
If specified and inherit.aes = TRUE (the default),
it is combined with the default mapping at the top level of
the plot. You must supply mapping if there is no plot mapping.}

\item{scaleXY}{default "local", which means limits of x-axis and y-axis
depend on their own variable. "global" means limits of them depend on all
variables that user input.}

\item{plotAll}{booleans, if TRUE, plot all variable together}
}
\value{
Return a ggplot2 object.
}
\description{
Visualize the range of the variables of each observations
by marking minimal and maximal point.
}
\examples{
ggInterval_minmax(mtcars,aes(disp))

mydata2<-RSDA::Cardiological
ggInterval_minmax(mydata2,aes(mydata2$Pulse,size=3))

d<-mapply(c(10,20,40,80,160),c(20,40,80,160,320),FUN=runif,n=1000)
d<-data.frame(qq=matrix(d,ncol=1))
ggInterval_minmax(d,aes(qq))

myIris<-classic2sym(iris,groupby=Species)
myIris<-myIris$intervalData
ggInterval_minmax(myIris,aes(myIris$Petal.Length))+
   theme_classic()
}
